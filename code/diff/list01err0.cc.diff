--- list01.cc	2016-12-03 15:57:44.199779537 -0800
+++ list01err0.cc	2016-12-01 07:19:44.396657431 -0800
@@ -26,18 +26,16 @@
 
   ~list()
   {
-    for (list_node_base* n = head_.next; n != &head_;)
+    // WRONG: use-after-free
+    for (list_node_base* n = head_.next; n != &head_; n = n->next)
     {
-      list_node* tod = static_cast<list_node*>(n);
-      n = n->next;
-      delete tod;
+      delete static_cast<list_node*>(n);
     }
   }
 
   list(const list& rhs) = delete;
   void operator=(const list& rhs) = delete;
 
-  // Effective Modern C++, Item 41.
   void push_front(T x)
   {
     list_node* n = new list_node(std::move(x));
@@ -68,22 +66,9 @@
 
 ///////////////////////////////////////  main()  ////////////////////////////
 
-#include <memory>
-#include <string>
-
 int main()
 {
   leanstl::list<int> li;
   li.push_front(43);
   printf("front=%d\n", li.front());
-  li.push_front(82);
-  printf("front=%d\n", li.front());
-
-  leanstl::list<std::string> ls;
-  ls.push_front("hello");
-  printf("front=%s\n", ls.front().c_str());
-
-  leanstl::list<std::unique_ptr<double>> lu;
-  lu.push_front(std::unique_ptr<double>(new double(5.0)));  // make_unique in C++14
-  printf("front=%f\n", *lu.front());
 }
